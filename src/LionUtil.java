import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

import org.junit.Test;

public class LionUtil {

    public static void main(String[] args) {
        String lionA = "gs-uoperation.gs-activity\n"
            + "gs-uoperation.shannon.readTimeout\n"
            + "gs-uoperation.gs-gather\n"
            + "gs-uoperation.app.id\n"
            + "gs-uoperation.crypto.host\n"
            + "gs-uoperation.ymm.userInfo\n"
            + "gs-uoperation.gas-station\n"
            + "gs-uoperation.app.private.key\n"
            + "gs-uoperation.shannon.appSecretKey\n"
            + "gs-uoperation.econtract.host\n"
            + "gs-uoperation.shannon.connectTimeout\n"
            + "gs-uoperation.gs-mevaluate.host\n"
            + "gs-uoperation.shannon.galileoTraceEnable\n"
            + "gs-uoperation.shannon.writeTimeout\n"
            + "gs-uoperation.shannon.appUid\n"
            + "gs-uoperation.shannon.task.scheduler.host\n"
            + "gs-uoperation.truck.host\n"
            + "gs-uoperation.shannon.tokenHost\n"
            + "gs-uoperation.hcb.userInfo\n"
            + "gs-uoperation.cos.host\n"
            + "gs-uoperation.gs-config\n"
            + "gs-uoperation.gs-osearch\n"
            + "gs-uoperation.redis.zebra.maxWait\n"
            + "gs-uoperation.redis.zebra.testOnBorrow\n"
            + "gs-uoperation.redis.zebra.minIdle\n"
            + "gs-uoperation.redis.zebra.db\n"
            + "gs-uoperation.redis.zebra.maxIdle\n"
            + "gs-uoperation.redis.zebra.maxTotal\n"
            + "gs-uoperation.lion.prefix.enable\n"
            + "gs-uoperation.swagger.enable\n"
            + "gs-uoperation.jdbc.ref\n"
            + "gs-uoperation.base.stats.host.url\n"
            + "gs-uoperation.gs-uagg.url\n"
            + "gs-uoperation.beidou.control.code\n"
            + "gs-uoperation.gs-mgather\n"
            + "gs-uoperation.gs-emgt.host\n"
            + "gs-uoperation.gs.mproduct\n"
            + "gs-uoperation.gs-push.host\n"
            + "gs-uoperation.uoperate-log\n"
            + "gs-uoperation.zjxl.user.flag\n"
            + "gs-uoperation.gs-crm\n"
            + "gs-uoperation.member.order.reward.threshold\n"
            + "gs-uoperation.user.sign.in.config\n"
            + "gs-uoperation.gs.oil.point.gray.purpose.provinces\n"
            + "gs-uoperation.coupon.host.url\n"
            + "gs-uoperation.gs.gas.station.app.private.key\n"
            + "gs-uoperation.member.subject\n"
            + "gs-uoperation.submit.order.deduction.threshold\n"
            + "gs-uoperation.submit.order.deduction.rate\n"
            + "gs-uoperation.oil.point.allow.prize.num\n"
            + "gs-uoperation.gs.gas.station.app.id\n"
            + "gs-uoperation.gs.oil.point.gray.test.ymm.uids\n"
            + "gs-uoperation.oilpoint.systemrewrd.tasksswitch\n"
            + "gs-uoperation.oilpoint.systemrewrd.expiredays\n"
            + "gs-uoperation.oilpoint.systemrewrd.environmentswitch\n"
            + "gs-uoperation.oilpoint.systemrewrd.newendtimestr\n"
            + "gs-uoperation.oilpoint.systemrewrd.endtimestr\n"
            + "gs-uoperation.gs-emgt.host.feign.hystrix.timeoutInMilliseconds\n"
            + "gs-uoperation.thaad.status\n"
            + "gs-uoperation.thaad.output.status\n"
            + "gs-uoperation.only.write.mask\n"
            + "gs-uoperation.custom.mask.hints\n"
            + "gs-uoperation.cache.refresh.request.switch\n"
            + "gs-uoperation.userCorrect.questionType\n"
            + "gs-uoperation.UserFeedback.questionMap\n"
            + "gs-uoperation.sign.contract.templateName\n"
            + "gs-uoperation.sign.contract.contractTitle\n";

        String lionB = "gs-umember-agg.sign.appId\n"
            + "gs-umember-agg.wish.server.host\n"
            + "gs-umember-agg.inspire.server.host\n"
            + "gs-umember-agg.sign.private.key\n"
            + "gs-umember-agg.app.namespace\n"
            + "gs-umember-agg.profit.server.host\n"
            + "gs-umember-agg.e-freight.server.host\n"
            + "gs-umember-agg.app.site\n"
            + "gs-umember-agg.lion.prefix.enable\n"
            + "gs-umember-agg.ucenter.server.host\n"
            + "gs-umember-agg.uymm.server.host\n"
            + "gs-umember-agg.truck.server.url\n"
            + "gs-umember-agg.gs-stat.server.host\n"
            + "gs-umember-agg.gs.mq.server.vhost\n"
            + "gs-umember-agg.gs.mq.server.port\n"
            + "gs-umember-agg.ucenter.mq.server.password\n"
            + "gs-umember-agg.ucenter.mq.server.port\n"
            + "gs-umember-agg.gs.mq.server.username\n"
            + "gs-umember-agg.gs.mq.server.host\n"
            + "gs-umember-agg.ucenter.mq.server.host\n"
            + "gs-umember-agg.ucenter.mq.server.vhost\n"
            + "gs-umember-agg.gs.mq.server.password\n"
            + "gs-umember-agg.ucenter.mq.server.username\n"
            + "gs-umember-agg.redis.maxIdle\n"
            + "gs-umember-agg.redis.testOnBorrow\n"
            + "gs-umember-agg.redis.maxWait\n"
            + "gs-umember-agg.redis.expiretime\n"
            + "gs-umember-agg.redis.db\n"
            + "gs-umember-agg.jdbc.ref\n"
            + "gs-umember-agg.gs-activity.server.host\n"
            + "gs-umember-agg.shannon.secret\n"
            + "gs-umember-agg.shannon.token.url\n"
            + "gs-umember-agg.shannon.appuid\n"
            + "gs-umember-agg.gs.mq.server.sh.port\n"
            + "gs-umember-agg.gs.mq.server.sh.password\n"
            + "gs-umember-agg.gs.mq.server.sh.username\n"
            + "gs-umember-agg.gs.mq.server.sh.vhost\n"
            + "gs-umember-agg.gs.mq.server.sh.host\n"
            + "gs-umember-agg.gs-config\n"
            + "gs-umember-agg.consume.config\n"
            + "gs-umember-agg.thaad.status\n"
            + "gs-umember-agg.thaad.output.status\n"
            + "gs-umember-agg.only.write.mask\n";

        List<String> lionListA = Arrays.stream(lionA.split("\n")).map(s -> s.replace("gs-uoperation.", "")).collect(Collectors.toList());

        List<String> lionListB = Arrays.stream(lionB.split("\n")).map(s -> s.replace("gs-umember-agg.", "")).collect(Collectors.toList());

        List<String> lionListBInterA = lionListB.stream().filter(lionListA::contains).peek(System.out::println).collect(Collectors.toList());


    }

    @Test
    public void test() {
        String lionA = "gs-uoperation.app.id\n"
            + "gs-uoperation.app.private.key\n"
            + "gs-uoperation.app.public.key\n"
            + "gs-uoperation.gs-config\n"
            + "gs-uoperation.gs.gas.station.app.id\n"
            + "gs-uoperation.gs-activity\n"
            + "gs-uoperation.gs-gather\n"
            + "gs-uoperation.hcb.userInfo\n"
            + "gs-uoperation.ymm.userInfo\n"
            + "gs-uoperation.gas-station\n"
            + "gs-uoperation.crypto.host\n"
            + "gs-uoperation.uymm\n"
            + "gs-uoperation.dac.host\n"
            + "gs-uoperation.cos.host\n"
            + "gs-uoperation.gs-mevaluate.host\n"
            + "gs-uoperation.truck.host\n"
            + "gs-uoperation.gs-osearch\n"
            + "gs-uoperation.econtract.host\n"
            + "gs-uoperation.usetting\n"
            + "gs-uoperation.shannon.tokenHost\n"
            + "gs-uoperation.shannon.task.scheduler.host\n"
            + "gs-uoperation.shannon.appUid\n"
            + "gs-uoperation.shannon.appSecretKey\n"
            + "gs-uoperation.shannon.galileoTraceEnable\n"
            + "gs-uoperation.shannon.connectTimeout\n"
            + "gs-uoperation.shannon.readTimeout\n"
            + "gs-uoperation.shannon.writeTimeout\n"
            + "gs-uoperation.jdbc.username\n"
            + "gs-uoperation.log4j.rootLogger\n"
            + "gs-uoperation.log4j.appender.L.Append\n"
            + "gs-uoperation.log4j.appender.L.Threshold\n"
            + "gs-uoperation.log4j.appender.L.layout\n"
            + "gs-uoperation.log4j.appender.L.layout.ConversionPattern\n"
            + "gs-uoperation.log4j.appender.stdout.charset\n"
            + "gs-uoperation.log4j.appender.stdout.encoding\n"
            + "gs-uoperation.log4j.appender.stdout\n"
            + "gs-uoperation.log4j.appender.stdout.layout\n"
            + "gs-uoperation.log4j.appender.stdout.layout.ConversionPattern\n"
            + "gs-uoperation.log4j.category.springfox.documentation\n"
            + "gs-uoperation.redis.zebra.appid\n"
            + "gs-uoperation.redis.zebra.timeout\n"
            + "gs-uoperation.redis.zebra.db\n"
            + "gs-uoperation.redis.zebra.maxTotal\n"
            + "gs-uoperation.redis.zebra.minIdle\n"
            + "gs-uoperation.redis.zebra.maxIdle\n"
            + "gs-uoperation.redis.zebra.maxWait\n"
            + "gs-uoperation.redis.zebra.testOnBorrow\n"
            + "gs-uoperation.lion.prefix.enable\n"
            + "gs-uoperation.jdbc.ref\n"
            + "gs-uoperation.dependencies.mock\n"
            + "gs-uoperation.maxwell.config.host\n"
            + "gs-uoperation.maxwell.config.port\n"
            + "gs-uoperation.swagger.show\n"
            + "gs-uoperation.base.stats.host.url\n"
            + "gs-uoperation.gs-uagg.url\n"
            + "gs-uoperation.beidou.control.code\n"
            + "gs-uoperation.http.sso.service.host\n"
            + "gs-uoperation.gd.map\n"
            + "gs-uoperation.gs-mgather\n"
            + "gs-uoperation.gs-emgt.host\n"
            + "gs-uoperation.uoperate-log\n"
            + "gs-uoperation.\n"
            + "gs-uoperation.gs.mproduct\n"
            + "gs-uoperation.gs-push.host\n"
            + "gs-uoperation.zjxl.user.flag\n"
            + "gs-uoperation.gs-crm\n"
            + "gs-uoperation.crm.host\n"
            + "gs-uoperation.oil.point.allow.prize.num\n"
            + "gs-uoperation.gs.oil.point.gray.purpose.provinces\n"
            + "gs-uoperation.coupon.host.url\n"
            + "gs-uoperation.gs.gas.station.app.private.key\n"
            + "gs-uoperation.user.sign.in.config\n"
            + "gs-uoperation.submit.order.deduction.rate\n"
            + "gs-uoperation.submit.order.deduction.threshold\n"
            + "gs-uoperation.member.subject\n"
            + "gs-uoperation.member.order.reward.threshold\n"
            + "gs-uoperation.swagger.enable\n"
            + "gs-uoperation.spring.profiles.active\n"
            + "gs-uoperation.tbase.host\n"
            + "gs-uoperation.gs.oil.point.gray.test.ymm.uids\n"
            + "gs-uoperation.oilpoint.systemrewrd.expiredays\n"
            + "gs-uoperation.oilpoint.systemrewrd.tasksswitch\n"
            + "gs-uoperation.oilpoint.systemrewrd.environmentswitch\n"
            + "gs-uoperation.oilpoint.systemrewrd.endtimestr\n"
            + "gs-uoperation.oilpoint.systemrewrd.newendtimestr\n"
            + "gs-uoperation.sign.contract.url\n"
            + "gs-uoperation.thaad.status\n"
            + "gs-uoperation.custom.mask.hints\n"
            + "gs-uoperation.thaad.output.status\n"
            + "gs-uoperation.custom.mask.mixColumn\n"
            + "gs-uoperation.only.write.mask\n"
            + "gs-uoperation.cache.refresh.request.switch\n"
            + "gs-uoperation.UserFeedback.questionMap\n"
            + "gs-uoperation.userCorrect.questionType\n"
            + "gs-uoperation.sign.contract.templateName\n"
            + "gs-uoperation.sign.contract.contractTitle\n";
        String lionB = "gs-umember-agg.application.spring.profiles.active\n"
            + "gs-umember-agg.inspire.server.host\n"
            + "gs-umember-agg.profit.server.host\n"
            + "gs-umember-agg.wish.server.host\n"
            + "gs-umember-agg.task.server.host\n"
            + "gs-umember-agg.e-freight.server.host\n"
            + "gs-umember-agg.o-search.server.host\n"
            + "gs-umember-agg.sign.appId\n"
            + "gs-umember-agg.sign.public.key\n"
            + "gs-umember-agg.sign.private.key\n"
            + "gs-umember-agg.app.namespace\n"
            + "gs-umember-agg.app.site\n"
            + "gs-umember-agg.sso.server.host\n"
            + "gs-umember-agg.infra.setting.host\n"
            + "gs-umember-agg.infra.alert.host\n"
            + "gs-umember-agg.lion.prefix.enable\n"
            + "gs-umember-agg.validationQuery\n"
            + "gs-umember-agg.redis.maxIdle\n"
            + "gs-umember-agg.redis.maxWait\n"
            + "gs-umember-agg.redis.testOnBorrow\n"
            + "gs-umember-agg.redis.db\n"
            + "gs-umember-agg.jdbc.ref\n"
            + "gs-umember-agg.gs-activity.server.host\n"
            + "gs-umember-agg.ucenter.server.host\n"
            + "gs-umember-agg.gs.mq.server.vhost\n"
            + "gs-umember-agg.elasticsearch.indexes\n"
            + "gs-umember-agg.dependencies.mock\n"
            + "gs-umember-agg.elasticsearch.cluster.nodes\n"
            + "gs-umember-agg.elasticsearch.cluster.name\n"
            + "gs-umember-agg.elasticsearch.types\n"
            + "gs-umember-agg.shannon.appuid\n"
            + "gs-umember-agg.shannon.secret\n"
            + "gs-umember-agg.shannon.token.url\n"
            + "gs-umember-agg.uymm.server.host\n"
            + "gs-umember-agg.job.scheduler.host\n"
            + "gs-umember-agg.job.scheduler.token.host\n"
            + "gs-umember-agg.job.scheduler.app.uid\n"
            + "gs-umember-agg.job.scheduler.app.secret\n"
            + "gs-umember-agg.gs-stat.server.host\n"
            + "gs-umember-agg.truck.server.url\n"
            + "gs-umember-agg.ucenter.mq.server.host\n"
            + "gs-umember-agg.ucenter.mq.server.port\n"
            + "gs-umember-agg.ucenter.mq.server.username\n"
            + "gs-umember-agg.ucenter.mq.server.password\n"
            + "gs-umember-agg.ucenter.mq.server.vhost\n"
            + "gs-umember-agg.gs.mq.server.sh.vhost\n"
            + "gs-umember-agg.gs.mq.server.sh.password\n"
            + "gs-umember-agg.gs.mq.server.sh.username\n"
            + "gs-umember-agg.gs.mq.server.sh.port\n"
            + "gs-umember-agg.gs.mq.server.sh.host\n"
            + "gs-umember-agg.gs-config\n"
            + "gs-umember-agg.consume.config\n"
            + "gs-umember-agg.spring.profiles.active\n"
            + "gs-umember-agg.thaad.status\n"
            + "gs-umember-agg.thaad.output.status\n";

        List<String> lionListA = Arrays.stream(lionA.split("\n")).map(s -> s.replace("gs-uoperation.", "")).collect(Collectors.toList());

        List<String> lionListB = Arrays.stream(lionB.split("\n")).map(s -> s.replace("gs-umember-agg.", "")).collect(Collectors.toList());

        List<String> lionListBInterA = lionListB.stream().filter(lionListA::contains).peek(System.out::println).collect(Collectors.toList());
    }
}
